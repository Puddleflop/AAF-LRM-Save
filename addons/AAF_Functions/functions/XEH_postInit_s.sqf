/*/////////////////////////////////////////////////////////////////////////////////////////////////
Author: AAF
Description:  AAF_Functions Post-init Server exec
Parameters:  none
Returns:  nothing
Example:  none
*//////////////////////////////////////////////////////////////////////////////////////////////////
if (not isServer) exitwith {};//If not server exit

//GROUP CLEANER ///////////////////////////////////////////////////////////////////////////////////
_gclean = execvm "\aaf_functions\functions\grpclean.sqf";

//AI RESUPPLY /////////////////////////////////////////////////////////////////////////////////////
_resupply = execvm "\aaf_functions\functions\ai_resupply.sqf";

//DYNAMIC GROUPS///////////////////////////////////////////////////////////////////////////////////
if (isServer) then { ["Initialize", [true]] call BIS_fnc_dynamicGroups; };

//REDUCER//////////////////////////////////////////////////////////////////////////////////////////
aaf_reducer = missionNamespace getvariable["aaf_reducer",true];//Settings check

if (aaf_reducer) then {
	f_var_reducerAggressiveness = 2;
	_reducer = [120] spawn aaf_fnc_rInit;
};
//missionNamespace setVariable ["aaf_reducer", true, true];
//Mission settings - varspace setVariable [name, value, public]

//SKILL SETTING////////////////////////////////////////////////////////////////////////////////////
call aaf_fnc_skill;

//AI SKILL EVENTHANDLER////////////////////////////////////////////////////////////////////////////
{ 
	_aiskill = _x addEventHandler ["CuratorGroupPlaced", { call aaf_fnc_skill; }];
} foreach allCurators;

//MISSION INTRO////////////////////////////////////////////////////////////////////////////////////
if (isMultiplayer) then {//check MP first
	if (isDedicated) then { [aaf_intro] spawn aaf_fnc_introS; };
};
